START TRANSACTION;

CREATE DATABASE IF NOT EXISTS `HOTEL`;

USE `HOTEL`;

CREATE TABLE IF NOT EXISTS `PROFILES`(
    `USER_ID` VARCHAR(35),
    `NAME` VARCHAR(100) NOT NULL,
    `USERNAME` VARCHAR(100) NOT NULL UNIQUE,
    `EMAIL` VARCHAR(100) NOT NULL UNIQUE,
    `PASSWORD` VARCHAR(100) NOT NULL,
    `JOINED` BIGINT(15) NOT NULL,
    PRIMARY KEY(`USER_ID`)
);

CREATE TABLE IF NOT EXISTS `FOODS`(
    `FOOD_ID` VARCHAR(35),
    `NAME` VARCHAR(100) NOT NULL,
    `DESCRIPTION` VARCHAR(400) NOT NULL,
    `PRICE` DOUBLE(10, 2) NOT NULL,
    `ADDED_ON` BIGINT(15) NOT NULL,
    `COVER` VARCHAR(35) NULL,
    PRIMARY KEY(`FOOD_ID`)
);

CREATE TABLE IF NOT EXISTS `ORDERS`(
    `ORDER_ID` VARCHAR(35),
    `USER_ID` VARCHAR(35) NOT NULL,
    `FOOD_ID` VARCHAR(35) NOT NULL,
    `QUANTITY` INT(11) NOT NULL,
    `ROOM` VARCHAR(50) NOT NULL,
    `TABLE` VARCHAR(50) NOT NULL,
    `SIMILAR` VARCHAR(35) NOT NULL,
    `TIMESTAMP` BIGINT(15) NOT NULL,
    `STATUS` INT(2) NOT NULL,
    PRIMARY KEY(`ORDER_ID`),
    FOREIGN KEY(`USER_ID`) REFERENCES `PROFILES`(`USER_ID`) ON DELETE CASCADE,
    FOREIGN KEY(`FOOD_ID`) REFERENCES `FOODS`(`FOOD_ID`) ON DELETE CASCADE
);

COMMIT;